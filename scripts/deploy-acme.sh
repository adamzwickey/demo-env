#!/bin/bash -e

: ${PARAMS_YAML?"Need to set PARAMS_YAML environment variable"}

kubectl config set-context --current --namespace acme-fitness

kubectl apply -f acme-fitness/acme-fitness-mongodata-pvc.yaml
kubectl create secret generic cart-redis-pass --from-literal=password=KeepItSimple1!
kubectl label secret cart-redis-pass app=acmefit
kubectl apply -f acme_fitness_demo/kubernetes-manifests/cart-redis-total.yaml 
kubectl apply -f acme_fitness_demo/kubernetes-manifests/cart-total.yaml 
kubectl create secret generic catalog-mongo-pass --from-literal=password=KeepItSimple1! 
kubectl label secret catalog-mongo-pass app=acmefit
kubectl create -f acme_fitness_demo/kubernetes-manifests/catalog-db-initdb-configmap.yaml 
kubectl label cm catalog-initdb-config app=acmefit
kubectl apply -f acme_fitness_demo/kubernetes-manifests/catalog-db-total.yaml 
kubectl apply -f acme_fitness_demo/kubernetes-manifests/catalog-total.yaml
kubectl apply -f acme_fitness_demo/kubernetes-manifests/payment-total.yaml
kubectl create secret generic order-postgres-pass --from-literal=password=KeepItSimple1!
kubectl label secret order-postgres-pass app=acmefit
kubectl apply -f acme_fitness_demo/kubernetes-manifests/order-db-total.yaml
kubectl apply -f acme_fitness_demo/kubernetes-manifests/order-total.yaml
kubectl create secret generic users-mongo-pass --from-literal=password=KeepItSimple1!
kubectl label secret users-mongo-pass app=acmefit
kubectl create secret generic users-redis-pass --from-literal=password=KeepItSimple1!
kubectl label secret users-redis-pass app=acmefit
kubectl create -f acme_fitness_demo/kubernetes-manifests/users-db-initdb-configmap.yaml
kubectl label cm users-initdb-config app=acmefit
kubectl apply -f acme_fitness_demo/kubernetes-manifests/users-db-total.yaml
kubectl apply -f acme_fitness_demo/kubernetes-manifests/users-redis-total.yaml
kubectl apply -f acme_fitness_demo/kubernetes-manifests/users-total.yaml
kubectl patch deployment catalog-mongo --type merge -p "$(cat acme-fitness/catalog-db-patch-volumes.yaml)"
kubectl apply -f acme_fitness_demo/kubernetes-manifests/frontend-total.yaml
kubectl apply -f generated/$(yq r $PARAMS_YAML workload-cluster.name)/acme-fitness/acme-fitness-frontend-ingress.yaml

# Wait for acme-fitness-tls to be generated by cert-manager to be READY: True
while kubectl get cert acme-fitness-tls | grep True ; [ $? -ne 0 ]; do
  echo Acme certificate is not yet ready
  sleep 5s
done 
kubectl label secret acme-fitness-tls app=acmefit

kubectl config set-context --current --namespace default